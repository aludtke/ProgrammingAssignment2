cacheSolve <- function(x) {
   
   #gets cache value
   abc <- x$getInverse() 
   
   #if not empty, return it
    if(!is.null(abc)) { 
        message("getting the data")
        return(abc)
    }
    
    #Cache was empty, calcualte, cache, return.
    #Get value of matrix
    #calculate inverse
    #cache result
    #return inverse
    
    data <- x$get()  
    abc <- solve(data) 
    x$setInverse(abc)  
    abc                
}


makeCacheMatrix <- function(x = matrix()) {
    #defines function to set value of the matrix.
    mabc <- NULL
    
    #inverse from matrix
    set <- function(y) {
        x <<- y    #sets value
        abc <<- NULL #clears cache
    }
   #defines function to get value of matrix.
    get <- function() x
    
    #defines function to set inverse
    setInverse <- function(inverse) abc <<- inverse
   
   # Define function to get the inverse
    getInverse <- function() abc
    
    #returns list of four functions
    list(set = set, get = get,
         setInverse = setInverse,
         getInverse = getInverse)
}
